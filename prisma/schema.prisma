generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              String      @id @unique
  name            String
  telephone       String
  email           String      @unique
  createdAt       DateTime    @default(now())
  password        String
  typeUser        Role
  manutences      Manutence[] 
  messages        Message[]   
  chatRooms       ChatRoom[]  
  historico       HistoricoManutencao[]
  adminManutences Manutence[] @relation(name: "AdminManutence") 
}

enum Role {
  ADMIN
  USER
}

model Manutence {
  id               String          @id @unique
  photos           Json
  video            String    @db.Text        
  title            String
  address          String
  message          String
  status_manutence StatusManutence @default(NOVO)
  createdAt        DateTime        @default(now())
  userId           String        
  adminId          String?        
  user             User            @relation(fields: [userId], references: [id])
  admin            User?           @relation(fields: [adminId], references: [id], name: "AdminManutence")
  chatRoomId       String?         @unique 
  chatRoom         ChatRoom?       @relation(fields: [chatRoomId], references: [id])
  historico        HistoricoManutencao[]
}

enum StatusManutence {
  FINALIZADO
  ANDAMENTO
  CANCELADO
  NOVO
}

model ChatRoom {
  id        String     @id @default(uuid())
  name      String?  
  users     User[]    
  messages  Message[]
  manutence Manutence? @relation 
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Message {
  id         String    @id @default(uuid())
  content    String
  createdAt  DateTime  @default(now())
  senderId   String
  chatRoomId String
  sender     User      @relation(fields: [senderId], references: [id])
  chatRoom   ChatRoom  @relation(fields: [chatRoomId], references: [id])
}

model HistoricoManutencao {
  id          String    @id @unique
  data        DateTime  @default(now())
  usuarioId   String    
  action      String    
  manutenceId String
  manutencao  Manutence @relation(fields: [manutenceId], references: [id])
  usuario     User      @relation(fields: [usuarioId], references: [id])
}